basePath: /
definitions:
  management.CreateCampaignRequest:
    properties:
      accept:
        type: number
      active:
        type: boolean
      certificates:
        items:
          type: string
        type: array
      courses:
        items:
          type: string
        type: array
      education:
        items:
          type: string
        type: array
      experience:
        items:
          type: string
        type: array
      finish:
        type: string
      languages:
        items:
          type: string
        type: array
      name:
        type: string
      reject:
        type: number
      skills:
        items:
          type: string
        type: array
      start:
        type: string
      wanted:
        type: integer
    type: object
  management.RegisterRequest:
    properties:
      company:
        example: ey
        type: string
      email:
        example: mike@mock.com
        type: string
      password:
        example: P@ssw0rd
        type: string
    type: object
  management.Request:
    properties:
      email:
        example: mike@mock.com
        type: string
      password:
        example: P@ssw0rd
        type: string
    type: object
  management.UpdateCampaignRequest:
    properties:
      accept:
        type: number
      active:
        type: boolean
      certificates:
        items:
          type: string
        type: array
      courses:
        items:
          type: string
        type: array
      education:
        items:
          type: string
        type: array
      experience:
        items:
          type: string
        type: array
      finish:
        type: string
      key:
        type: string
      languages:
        items:
          type: string
        type: array
      name:
        type: string
      reject:
        type: number
      skills:
        items:
          type: string
        type: array
      start:
        type: string
      wanted:
        type: integer
    type: object
info:
  contact: {}
  description: some API
  title: API
  version: "1.0"
paths:
  /account/authorize:
    get:
      consumes:
      - application/json
      description: Authorize existing user
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Authorize
      tags:
      - account
  /account/login:
    post:
      consumes:
      - application/json
      description: Login existing user
      parameters:
      - description: body
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/management.Request'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Login
      tags:
      - account
  /account/logout:
    get:
      consumes:
      - application/json
      description: Logout existing user
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Logout
      tags:
      - account
  /account/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: body
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/management.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Register
      tags:
      - account
  /campaign/create:
    post:
      consumes:
      - application/json
      description: CreateCampaign
      parameters:
      - description: body
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/management.CreateCampaignRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CreateCampaign
      tags:
      - campaigns
  /campaign/remove/{key}:
    delete:
      consumes:
      - application/json
      description: RemoveCampaign
      parameters:
      - description: key
        in: path
        name: key
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: RemoveCampaign
      tags:
      - campaigns
  /campaign/update:
    patch:
      consumes:
      - application/json
      description: UpdateCampaign
      parameters:
      - description: body
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/management.UpdateCampaignRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: UpdateCampaign
      tags:
      - campaigns
  /campaigns:
    get:
      consumes:
      - application/json
      description: ListCampaigns
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ListCampaigns
      tags:
      - campaigns
schemes:
- http
- https
swagger: "2.0"
